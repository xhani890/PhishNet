# ===============================================
# PhishNet Docker Setup
# Version: 1.0
# Created: July 25, 2025
# Description: Docker Compose setup for PhishNet
# ===============================================

version: '3.8'

services:
  # PostgreSQL Database
  database:
    image: postgres:15-alpine
    container_name: phishnet-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: phishnet
      POSTGRES_USER: phishnet_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-phishnet_secure_password}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations/00_phishnet_schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./migrations/01_sample_data.sql:/docker-entrypoint-initdb.d/02-data.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U phishnet_user -d phishnet"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - phishnet-network

  # Redis (for sessions and caching)
  redis:
    image: redis:7-alpine
    container_name: phishnet-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-phishnet_redis_password}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - phishnet-network

  # PhishNet Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NODE_ENV: production
    container_name: phishnet-app
    restart: unless-stopped
    environment:
      # Database
      DATABASE_URL: postgresql://phishnet_user:${DB_PASSWORD:-phishnet_secure_password}@database:5432/phishnet
      DB_HOST: database
      DB_PORT: 5432
      DB_NAME: phishnet
      DB_USER: phishnet_user
      DB_PASSWORD: ${DB_PASSWORD:-phishnet_secure_password}
      
      # Redis
      REDIS_URL: redis://:${REDIS_PASSWORD:-phishnet_redis_password}@redis:6379
      
      # Server
      PORT: 3001
      NODE_ENV: production
      SESSION_SECRET: ${SESSION_SECRET:-your-very-long-random-session-secret-here}
      
      # SMTP (Update with your settings)
      SMTP_HOST: ${SMTP_HOST:-smtp.gmail.com}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USER: ${SMTP_USER:-your-email@gmail.com}
      SMTP_PASS: ${SMTP_PASS:-your-app-password}
      SMTP_SECURE: ${SMTP_SECURE:-false}
      
      # File Upload
      UPLOAD_MAX_SIZE: 10485760
      UPLOAD_ALLOWED_TYPES: image/jpeg,image/png,image/gif,text/csv
      
      # Security
      BCRYPT_ROUNDS: 12
      SESSION_MAX_AGE: 86400000
      RATE_LIMIT_MAX: 100
      RATE_LIMIT_WINDOW: 900000
      
      # CORS
      CORS_ORIGIN: ${CORS_ORIGIN:-http://localhost}
    volumes:
      - upload_data:/app/uploads
      - ./logs:/app/logs
    ports:
      - "3001:3001"
    depends_on:
      database:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - phishnet-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: phishnet-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - upload_data:/var/www/uploads
      - ssl_certs:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - phishnet-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  upload_data:
    driver: local
  ssl_certs:
    driver: local

networks:
  phishnet-network:
    driver: bridge
